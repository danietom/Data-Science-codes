import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report
np.random.seed(45)
num_studends = 1000
data = {
    'Age': np.random.randint(18, 30, num_studends),
    'Ethnicity': np.random.choice(['African', 'Asian', 'European', 'Latino'], num_studends),
    'Attendance': np.random.randint(0, 100, num_studends),
    'Participation': np.random.randint(0, 10, num_studends),
    'Socioeconomic_Status': np.random.choice(['Low_class', 'Middle_class', 'High_class'], num_studends),
    'Enrollment_Status': np.random.choice([0, 1], num_studends)  
}
df = pd.DataFrame(data)
features = df[[ 'Age', 'Ethnicity', 'Attendance', 'Participation', 'Socioeconomic_Status']]
target = df['Enrollment_Status']
features_encoded = pd.get_dummies(features)
X_train, X_test, y_train, y_test = train_test_split(features_encoded, target, test_size=0.2, random_state=42)
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)
predictions = model.predict(X_test)
accuracy = accuracy_score(y_test, predictions)
print(f"Accuracy: {accuracy}")
print(classification_report(y_test, predictions))
